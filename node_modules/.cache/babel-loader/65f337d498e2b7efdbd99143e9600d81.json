{"ast":null,"code":"var _jsxFileName = \"/Users/nameer/Documents/Projects/MEA-Radio/Mea-Radio-Admin/src/components/OfflineSlotRequests/OfflineSlotRequests.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table, Button } from 'react-bootstrap';\nimport React, { useState, useEffect } from \"react\";\nimport { IP } from '../../constants/serverIP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OfflineSlotRequests() {\n  _s();\n\n  const [rows, setRows] = useState(null);\n\n  function fetchTable() {\n    fetch(IP + \"/api/admin/nonliveview\", {\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      if (!data['error']) {\n        setRows(data);\n      }\n\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    fetchTable();\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n    fetch(IP + \"/api/admin/nonliveapprove\", {\n      method: \"POST\",\n      credentials: 'include',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        slot_uid\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"error:\", data);\n      fetchTable();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      varient: \"primarty\",\n      style: {\n        padding: 5\n      },\n      onClick: () => fetchTable(),\n      children: \" Reload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      responsive: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Clip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), rows && rows.map((row, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ind + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"email\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"title\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"note\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"genre\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(row[\"date_from\"]).toString().replace(\"GMT+0530 (India Standard Time)\", \"\") + \" -> \" + new Date(row[\"date_to\"]).toString().replace(\"GMT+0530 (India Standard Time)\", \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              src: IP + \"`\" + row['slot_uid'],\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              varient: \"secondary\",\n              onClick: () => approve(row[\"slot_uid\"]) //here we use slot_uid to approve specific slot..but didnt shows on the table\n              ,\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OfflineSlotRequests, \"oUO4y1eHkE0Vf49q2Vm/qoo41YE=\");\n\n_c = OfflineSlotRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"OfflineSlotRequests\");","map":{"version":3,"sources":["/Users/nameer/Documents/Projects/MEA-Radio/Mea-Radio-Admin/src/components/OfflineSlotRequests/OfflineSlotRequests.jsx"],"names":["Table","Button","React","useState","useEffect","IP","OfflineSlotRequests","rows","setRows","fetchTable","fetch","credentials","then","res","json","data","console","log","catch","err","approve","slot_uid","method","headers","body","JSON","stringify","padding","map","row","ind","Date","toString","replace"],"mappings":"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","sourcesContent":["import {Table,Button} from 'react-bootstrap'\nimport React,{useState,useEffect} from \"react\";\nimport {IP} from '../../constants/serverIP'\nexport default function OfflineSlotRequests() {\n  const [rows, setRows] = useState(null);\n  function fetchTable() {\n    fetch(IP+\"/api/admin/nonliveview\", {\n      credentials:'include',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data['error']) {\n          setRows(data);\n        }\n        \n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    fetchTable();\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n\n    \n    fetch(IP+\"/api/admin/nonliveapprove\", {\n      method: \"POST\",\n      credentials:'include',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ slot_uid }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"error:\", data);\n        fetchTable();\n      }).catch(err => {\n        console.log(err);\n      });\n  }\n  return (\n    <div>\n       <Button varient=\"primarty\" style={{padding:5}} onClick={()=>fetchTable()}> Reload</Button>\n      <Table bordered hover size=\"sm\" responsive>\n        <tbody>\n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n                      <th>Time Slot</th>\n                      <th>Clip</th>\n          </tr>\n\n          {rows &&(\n            rows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n\n                <td>{row[\"note\"]}</td>\n                <td>{row[\"genre\"]}</td>\n                <td>\n                  {new Date(row[\"date_from\"])\n                    .toString()\n                    .replace(\"GMT+0530 (India Standard Time)\", \"\") +\n                    \" -> \" +\n                    new Date(row[\"date_to\"])\n                      .toString()\n                      .replace(\"GMT+0530 (India Standard Time)\", \"\")}\n                </td>\n                <td><audio src={IP+\"`\"+row['slot_uid']} controls></audio></td> {/* here we can append slotid with server ip..since we know the src will be same slotid*/}\n                \n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => approve(row[\"slot_uid\"])} //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            )))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}