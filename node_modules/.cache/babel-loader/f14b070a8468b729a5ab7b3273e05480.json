{"ast":null,"code":"var _jsxFileName = \"/home/nameer/Projects/MEA_Radio/admin/src/components/LiveSlotRequests/LiveSlotRequests.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LiveSlotRequests() {\n  _s();\n\n  const [rows, setRows] = useState(null);\n  const [members, setMembers] = useState({});\n\n  function fetchTable() {\n    fetch(\"http://localhost:3000/api/admin/bookslotview\", {\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      setRows(data);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    fetchTable();\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid); // NB: this table should only shows unapproved rows\n\n    fetch(\"http://localhost:3000/api/admin/bookslotapprove\", {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        slot_uid\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"error\", data);\n      fetchTable();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      ti: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      responsive: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"No of Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), rows && rows.map((row, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ind + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"email\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"title\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"note\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['genre']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(row[\"date_from\"]).toString().replace(\"GMT+0530 (India Standard Time)\", \"\") + \" -> \" + new Date(row[\"date_to\"]).toString().replace(\"GMT+0530 (India Standard Time)\", \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['no_of_members']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row['no_of_members'] > 1 ? row['members'].map(mem => mem) + \"\" : \"NULL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              varient: \"secondary\",\n              onClick: () => approve(row[\"slot_uid\"]) //here we use slot_uid to approve specific slot..but didnt shows on the table\n              ,\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LiveSlotRequests, \"fY2y8QTk4IoMek7lgtjA1awJKSQ=\");\n\n_c = LiveSlotRequests;\n\nvar _c;\n\n$RefreshReg$(_c, \"LiveSlotRequests\");","map":{"version":3,"sources":["/home/nameer/Projects/MEA_Radio/admin/src/components/LiveSlotRequests/LiveSlotRequests.jsx"],"names":["React","useState","Button","Table","useEffect","LiveSlotRequests","rows","setRows","members","setMembers","fetchTable","fetch","credentials","then","res","json","data","console","log","catch","err","approve","slot_uid","method","headers","body","JSON","stringify","map","row","ind","Date","toString","replace","mem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nexport default function LiveSlotRequests() {\n  const [rows, setRows] = useState(null);\n  const [members,setMembers]=useState({})\n  function fetchTable() {\n    fetch(\"http://localhost:3000/api/admin/bookslotview\", {\n       credentials:'include'\n     })\n      .then((res) => res.json())\n      .then((data) => {\n        setRows(data);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    fetchTable()\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n  \n    // NB: this table should only shows unapproved rows\n    fetch(\"http://localhost:3000/api/admin/bookslotapprove\", {\n      method: 'POST',\n      credentials: 'include',\n\n      headers: {\n        'Content-Type': 'application/json'\n        \n      },\n      body:JSON.stringify({slot_uid})\n    }).then(res => res.json()).then(data => {\n      console.log(\"error\", data);\n      fetchTable()\n    })\n    \n  }\n\n  \n\n  return (\n    <div>\n      <Button ti></Button>\n      <Table bordered hover size=\"sm\" responsive>\n        <tbody>\n          \n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n            <th>Time Slot</th>\n            <th>No of Members</th>\n            <th>Members</th>\n          </tr>\n\n          {rows &&(\n            rows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n\n                <td>{row[\"note\"]}</td>\n                <td>{row['genre']}</td>\n                <td>\n                  {new Date(row[\"date_from\"])\n                    .toString()\n                    .replace(\"GMT+0530 (India Standard Time)\", \"\") +\n                    \" -> \" +\n                    new Date(row[\"date_to\"])\n                      .toString()\n                      .replace(\"GMT+0530 (India Standard Time)\", \"\")}\n                </td>\n                <td>{row['no_of_members']}</td>\n                <td>{row['no_of_members'] > 1 ?\n                  row['members'].map((mem)=>mem)+\"\": \"NULL\"\n                  }</td>\n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => approve(row[\"slot_uid\"])} //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            )))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}