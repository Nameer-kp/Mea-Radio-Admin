{"ast":null,"code":"var _jsxFileName = \"/home/nameer/Projects/MEA_Radio/admin/src/components/ShowsUpdation/ShowsUpdation.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ShowsUpdation() {\n  _s();\n\n  const [rows, setRows] = useState(null);\n\n  function fetchTable() {\n    fetch(\"http://localhost:3000/api/admin/nonliveview\").then(res => res.json()).then(data => {\n      setRows(data);\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    fetchTable();\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n    fetch(\"http://localhost:3000/api/admin/nonliveapprove\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        slot_uid\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(\"error:\", data);\n      fetchTable();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      responsive: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Clip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), rows && rows.map((row, ind) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ind + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"email\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"title\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"note\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[\"genre\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(row[\"date_from\"]).toString().replace(\"GMT+0530 (India Standard Time)\", \"\") + \" -> \" + new Date(row[\"date_to\"]).toString().replace(\"GMT+0530 (India Standard Time)\", \"\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              src: \"http://localhost:3000/non_live_shows/\" + row['slot_uid'] + '.mp3',\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              varient: \"secondary\",\n              onClick: () => approve(row[\"slot_uid\"]) //here we use slot_uid to approve specific slot..but didnt shows on the table\n              ,\n              children: \"Approve\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ShowsUpdation, \"oUO4y1eHkE0Vf49q2Vm/qoo41YE=\");\n\n_c = ShowsUpdation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowsUpdation\");","map":{"version":3,"sources":["/home/nameer/Projects/MEA_Radio/admin/src/components/ShowsUpdation/ShowsUpdation.jsx"],"names":["React","useState","useEffect","Table","Button","ShowsUpdation","rows","setRows","fetchTable","fetch","then","res","json","data","console","log","catch","err","approve","slot_uid","method","headers","body","JSON","stringify","map","row","ind","Date","toString","replace"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Table, Button } from 'react-bootstrap'\n\nexport default function ShowsUpdation() {\n    const [rows, setRows] = useState(null);\n  function fetchTable() {\n    fetch(\"http://localhost:3000/api/admin/nonliveview\")\n      .then((res) => res.json())\n      .then((data) => {\n        setRows(data);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    fetchTable();\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n\n    \n    fetch(\"http://localhost:3000/api/admin/nonliveapprove\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ slot_uid }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"error:\", data);\n        fetchTable();\n      }).catch(err => {\n        console.log(err);\n      });\n  }\n  return (\n    <div>\n      <Table bordered hover size=\"sm\" responsive>\n        <tbody>\n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n                      <th>Time Slot</th>\n                      <th>Clip</th>\n          </tr>\n\n          {rows &&\n            rows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n\n                <td>{row[\"note\"]}</td>\n                <td>{row[\"genre\"]}</td>\n                <td>\n                  {new Date(row[\"date_from\"])\n                    .toString()\n                    .replace(\"GMT+0530 (India Standard Time)\", \"\") +\n                    \" -> \" +\n                    new Date(row[\"date_to\"])\n                      .toString()\n                      .replace(\"GMT+0530 (India Standard Time)\", \"\")}\n                </td>\n                <td><audio src={\"http://localhost:3000/non_live_shows/\"+row['slot_uid']+'.mp3'} controls></audio></td> {/* here we can append slotid with server ip..since we know the src will be same slotid*/}\n                \n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => approve(row[\"slot_uid\"])} //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}