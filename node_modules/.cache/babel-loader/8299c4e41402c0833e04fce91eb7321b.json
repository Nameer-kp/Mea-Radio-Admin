{"ast":null,"code":"import _slicedToArray from\"/home/nameer/Projects/MEA_Radio/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Button,Table}from\"react-bootstrap\";import{useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function LiveSlotRequests(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),rows=_useState2[0],setRows=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),members=_useState4[0],setMembers=_useState4[1];function fetchTable(){fetch(\"http://localhost:3000/api/admin/bookslotview\",{credentials:'include'}).then(function(res){return res.json();}).then(function(data){setRows(data);console.log(data);}).catch(function(err){console.log(err);});}useEffect(function(){fetchTable();},[]);function approve(slot_uid){console.log(\"approval request for\",slot_uid);// NB: this table should only shows unapproved rows\nfetch(\"http://localhost:3000/api/admin/bookslotapprove\",{method:'POST',credentials:'include',headers:{'Content-Type':'application/json'},body:JSON.stringify({slot_uid:slot_uid})}).then(function(res){return res.json();}).then(function(data){console.log(\"error\",data);fetchTable();});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{varient:\"primarty\",style:{padding:5},onClick:function onClick(){return fetchTable();},children:\" Reload\"}),/*#__PURE__*/_jsx(Table,{bordered:true,hover:true,size:\"sm\",responsive:true,children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Genre\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Time Slot\"}),/*#__PURE__*/_jsx(\"th\",{children:\"No of Members\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Members\"})]}),rows&&rows.map(function(row,ind){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:ind+1}),/*#__PURE__*/_jsx(\"td\",{children:row[\"email\"]}),/*#__PURE__*/_jsx(\"td\",{children:row[\"title\"]}),/*#__PURE__*/_jsx(\"td\",{children:row[\"note\"]}),/*#__PURE__*/_jsx(\"td\",{children:row['genre']}),/*#__PURE__*/_jsx(\"td\",{children:new Date(row[\"date_from\"]).toString().replace(\"GMT+0530 (India Standard Time)\",\"\")+\" -> \"+new Date(row[\"date_to\"]).toString().replace(\"GMT+0530 (India Standard Time)\",\"\")}),/*#__PURE__*/_jsx(\"td\",{children:row['no_of_members']}),/*#__PURE__*/_jsx(\"td\",{children:row['no_of_members']>1?row['members'].map(function(mem){return mem;})+\"\":\"NULL\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Button,{varient:\"secondary\",onClick:function onClick(){return approve(row[\"slot_uid\"]);}//here we use slot_uid to approve specific slot..but didnt shows on the table\n,children:\"Approve\"})})]});})]})})]});}","map":{"version":3,"sources":["/home/nameer/Projects/MEA_Radio/admin/src/components/LiveSlotRequests/LiveSlotRequests.jsx"],"names":["React","useState","Button","Table","useEffect","LiveSlotRequests","rows","setRows","members","setMembers","fetchTable","fetch","credentials","then","res","json","data","console","log","catch","err","approve","slot_uid","method","headers","body","JSON","stringify","padding","map","row","ind","Date","toString","replace","mem"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nexport default function LiveSlotRequests() {\n  const [rows, setRows] = useState(null);\n  const [members,setMembers]=useState({})\n  function fetchTable() {\n    fetch(\"http://localhost:3000/api/admin/bookslotview\", {\n       credentials:'include'\n     })\n      .then((res) => res.json())\n      .then((data) => {\n        setRows(data);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    fetchTable()\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n  \n    // NB: this table should only shows unapproved rows\n    fetch(\"http://localhost:3000/api/admin/bookslotapprove\", {\n      method: 'POST',\n      credentials: 'include',\n\n      headers: {\n        'Content-Type': 'application/json'\n        \n      },\n      body:JSON.stringify({slot_uid})\n    }).then(res => res.json()).then(data => {\n      console.log(\"error\", data);\n      fetchTable()\n    })\n    \n  }\n\n  \n\n  return (\n    <div>\n      <Button varient=\"primarty\" style={{padding:5}} onClick={()=>fetchTable()}> Reload</Button>\n      <Table bordered hover size=\"sm\" responsive>\n        <tbody>\n          \n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n            <th>Time Slot</th>\n            <th>No of Members</th>\n            <th>Members</th>\n          </tr>\n\n          {rows &&(\n            rows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n\n                <td>{row[\"note\"]}</td>\n                <td>{row['genre']}</td>\n                <td>\n                  {new Date(row[\"date_from\"])\n                    .toString()\n                    .replace(\"GMT+0530 (India Standard Time)\", \"\") +\n                    \" -> \" +\n                    new Date(row[\"date_to\"])\n                      .toString()\n                      .replace(\"GMT+0530 (India Standard Time)\", \"\")}\n                </td>\n                <td>{row['no_of_members']}</td>\n                <td>{row['no_of_members'] > 1 ?\n                  row['members'].map((mem)=>mem)+\"\": \"NULL\"\n                  }</td>\n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => approve(row[\"slot_uid\"])} //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            )))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}