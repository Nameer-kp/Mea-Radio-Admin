{"version":3,"sources":["logo.svg","components/Login/Login.jsx","components/LiveSlotRequests/LiveSlotRequests.jsx","components/OfflineSlotRequests/OfflineSlotRequests.jsx","components/RadioLoop/RadioLoop.jsx","components/ShowsUpdation/ShowsUpdation.jsx","components/MainNavigation/MainNavigation.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","document","cookie","Container","className","Form","style","border","padding","onSubmit","event","preventDefault","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","data","setLogin","Group","controlId","Label","Control","type","placeholder","onChange","e","target","value","Button","variant","marginTop","disabled","length","LiveSlotRequests","rows","setRows","fetchTable","console","log","catch","err","useEffect","varient","onClick","Table","bordered","hover","size","responsive","map","row","ind","Date","toString","replace","mem","slot_uid","OfflineSlotRequests","src","controls","RadioLoop","files","setFile","prev","useRef","id","multiple","name","current","formData","FormData","i","append","alert","ShowsUpdation","availableRows","setAvailableRows","currentRows","setCurrentRows","inputFile","thumbNails","setThumbNails","fetchAvailableTable","fetchCurrentTable","a","r","blob","textAlign","ref","display","URL","createObjectURL","onSetImage","click","onAddToShow","er","alt","width","height","MainNavigation","key","setKey","Navbar","bg","Brand","position","right","Tabs","activeKey","onSelect","k","Tab","eventKey","title","App","isLoggedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.28526c0b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\nimport ReactDom from 'react-dom'\nimport {Form,Button, Container,Row, Card } from 'react-bootstrap'\nimport './Login.css'\nexport default function Login(props){\n\n    const [email,setEmail]= useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    document.cookie = \"JWT=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    function validateForm(){\n\n        return email.length>0 && password.length>0\n    }\n    function handleSubmit(event){\n        event.preventDefault();\n        \n        fetch('http://35.200.150.147:3000/api/admin/login', {\n            method: \"POST\",\n            credentials:'include',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            \n            body:JSON.stringify({password,email})\n        }).then(res=>res.json()).then(data => {\n            if (!data['error']) {\n               props.setLogin(true) \n            }\n\n        })\n\n    }\n        return(\n            <div>\n                <h1>MEA Radio Admin Panel</h1>\n                 <Container className=\"Login\" >\n                \n                 <Form style={{'marginTop':'10%',border:'2px solid black',padding:'10px'}} onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control  type=\"email\" placeholder=\"Enter email\" onChange={(e)=>setEmail(e.target.value)} />\n                        \n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" onChange={(e)=>setPassword(e.target.value)}/>\n                    </Form.Group>\n                    \n                    <Button variant=\"primary\" type=\"submit\" style={{marginTop:'10px'}} disabled={!validateForm()}>\n                        Login\n                    </Button>\n                </Form>\n\n            \n            </Container>\n            </div>\n           \n           \n    )\n}","import React, { useState } from \"react\";\nimport { Button, Table } from \"react-bootstrap\";\nimport { useEffect } from \"react\";\nexport default function LiveSlotRequests() {\n  const [rows, setRows] = useState(null);\n  const [members,setMembers]=useState({})\n  function fetchTable() {\n    fetch(\"http://localhost:3000/api/admin/bookslotview\", {\n       credentials:'include'\n     })\n      .then((res) => res.json())\n      .then((data) => {\n        setRows(data);\n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    fetchTable()\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n  \n    // NB: this table should only shows unapproved rows\n    fetch(\"http://localhost:3000/api/admin/bookslotapprove\", {\n      method: 'POST',\n      credentials: 'include',\n\n      headers: {\n        'Content-Type': 'application/json'\n        \n      },\n      body:JSON.stringify({slot_uid})\n    }).then(res => res.json()).then(data => {\n      console.log(\"error\", data);\n      fetchTable()\n    })\n    \n  }\n\n  \n\n  return (\n    <div>\n      <Button varient=\"primarty\" style={{padding:5}} onClick={()=>fetchTable()}> Reload</Button>\n      <Table bordered hover size=\"sm\" responsive>\n        <tbody>\n          \n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n            <th>Time Slot</th>\n            <th>No of Members</th>\n            <th>Members</th>\n          </tr>\n\n          {rows &&(\n            rows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n\n                <td>{row[\"note\"]}</td>\n                <td>{row['genre']}</td>\n                <td>\n                  {new Date(row[\"date_from\"])\n                    .toString()\n                    .replace(\"GMT+0530 (India Standard Time)\", \"\") +\n                    \" -> \" +\n                    new Date(row[\"date_to\"])\n                      .toString()\n                      .replace(\"GMT+0530 (India Standard Time)\", \"\")}\n                </td>\n                <td>{row['no_of_members']}</td>\n                <td>{row['no_of_members'] > 1 ?\n                  row['members'].map((mem)=>mem)+\"\": \"NULL\"\n                  }</td>\n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => approve(row[\"slot_uid\"])} //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            )))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import {Table,Button} from 'react-bootstrap'\nimport React,{useState,useEffect} from \"react\";\n\nexport default function OfflineSlotRequests() {\n  const [rows, setRows] = useState(null);\n  function fetchTable() {\n    fetch(\"http://localhost:3000/api/admin/nonliveview\", {\n      credentials:'include',\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data['error']) {\n          setRows(data);\n        }\n        \n        console.log(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    fetchTable();\n  }, []);\n\n  function approve(slot_uid) {\n    console.log(\"approval request for\", slot_uid);\n\n    \n    fetch(\"http://localhost:3000/api/admin/nonliveapprove\", {\n      method: \"POST\",\n      credentials:'include',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ slot_uid }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"error:\", data);\n        fetchTable();\n      }).catch(err => {\n        console.log(err);\n      });\n  }\n  return (\n    <div>\n       <Button varient=\"primarty\" style={{padding:5}} onClick={()=>fetchTable()}> Reload</Button>\n      <Table bordered hover size=\"sm\" responsive>\n        <tbody>\n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n                      <th>Time Slot</th>\n                      <th>Clip</th>\n          </tr>\n\n          {rows &&(\n            rows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n\n                <td>{row[\"note\"]}</td>\n                <td>{row[\"genre\"]}</td>\n                <td>\n                  {new Date(row[\"date_from\"])\n                    .toString()\n                    .replace(\"GMT+0530 (India Standard Time)\", \"\") +\n                    \" -> \" +\n                    new Date(row[\"date_to\"])\n                      .toString()\n                      .replace(\"GMT+0530 (India Standard Time)\", \"\")}\n                </td>\n                <td><audio src={\"http://localhost:3000/audio/\"+row['slot_uid']+'.mp3'} controls></audio></td> {/* here we can append slotid with server ip..since we know the src will be same slotid*/}\n                \n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => approve(row[\"slot_uid\"])} //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            )))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import React,{useRef, useState} from 'react'\n\nexport default function RadioLoop() {\n    const [files, setFile] = useState('')\n    const prev =useRef()\n    function handleChange(e) {\n        setFile(e.target.files)\n        \n    }\n    function onClick() {\n        if (files.length > 0) {\n            console.log(files);\n            if (prev.current !== files) {\n                const formData = new FormData()\n            for (let i = 0; i < files.length; i++){\n                formData.append('files', files[i])\n            }\n            \n            fetch('http://localhost:3000/api/admin/updateradioloop', {\n                method: 'POST',\n                credentials:'include',\n                body:formData\n            })\n                prev.current = files;\n            }\n            else {\n                alert(\"select different files\")\n            }\n            \n        }\n        else {\n            alert(\"select atleast One file\")\n        }\n    }\n    return (\n        <div>\n            <input type=\"file\" id=\"file\" multiple name=\"file\" onChange={handleChange} />\n            <button type=\"submit\" className=\"btn btn-info\" onClick={onClick}> Update Loop </button>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\n\nexport default function ShowsUpdation() {\n  const [availableRows, setAvailableRows] = useState(null);\n  const [currentRows, setCurrentRows] = useState(null);\n  const inputFile = useRef(null);\n  const [thumbNails, setThumbNails] = useState({});\n\n  function fetchAvailableTable() {\n    fetch(\"http://localhost:3000/api/admin/getavailableshows\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setAvailableRows(data);\n          \n        }\n        else {\n          setAvailableRows(null)\n        }\n        \n        \n      })\n      .catch((err) => {\n        \n        \n      });\n  }\n\n  function fetchCurrentTable() {\n    fetch(\"http://localhost:3000/api/admin/getcurrentshow\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.length > 0) {\n          setCurrentRows(data);\n        }\n        \n        \n      })\n      .catch((err) => {\n        \n        console.log(err);\n      });\n  }\n  useEffect(() => {\n    fetchAvailableTable();\n    fetchCurrentTable();\n  }, []);\n\n  async function onAddToShow(slot_uid) {\n    console.log(\"add show request for:\", slot_uid);\n    const formData = new FormData();\n    let blob = await fetch(thumbNails[slot_uid]).then((r) => r.blob());\n    formData.append(\"thumbnail\", blob, slot_uid);\n    fetch(\"http://localhost:3000/api/admin/addtoshow\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"error:\", data);\n        fetchAvailableTable();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  function onSetImage(e, slot_uid) {\n    setThumbNails({\n      ...thumbNails,\n      [slot_uid]: URL.createObjectURL(e.target.files[0]),\n    });\n    console.log(thumbNails);\n  }\n\n  function onRemoveShow(slot_uid) {\n    \n    fetch('http://localhost:3000/api/admin/removeshow', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n      },\n      body: JSON.stringify({slot_uid})\n    })\n    fetchCurrentTable()\n\n   } // should remove from show db as well as from audio and thumbnail\n  function onRemoveRecording(slot_uid) {\n    fetch('http://localhost:3000/api/admin/removerecording', {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/json',\n      },\n      body: JSON.stringify({slot_uid})\n    }).then(res=>fetchAvailableTable()).catch(er=>console.log(er));\n      \n  }\n  \n  \n    \n   \n  return (\n    <div>\n      <Button varient=\"primarty\" style={{ padding: 5 }} onClick={()=>fetchAvailableTable()}> Reload</Button>\n      <Table bordered hover size=\"sm\" responsive key=\"RC\">\n        <h4 style={{ textAlign: \"center\" }}>Available Shows</h4>\n        <tbody>\n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n\n            <th>Clip</th>\n          </tr>\n\n          {availableRows&&(\n            availableRows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n                <td>{row[\"note\"]}</td>\n                <td>{row[\"genre\"]}</td>\n                <td>\n                  <audio\n                    src={\n                      \"http://localhost:3000/audio/\" + row[\"slot_uid\"] + \".mp3\"\n                    }\n                    controls\n                  ></audio>\n                </td>\n                {/* here we can append slotid with server ip..since we know the src will be same slotid*/}\n                <td>\n                  <input\n                    type=\"file\"\n                    id=\"file\"\n                    ref={inputFile}\n                    style={{ display: \"none\" }}\n                    onChange={(e) => onSetImage(e, row[\"slot_uid\"])}\n                  />\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => inputFile.current.click()}\n                  >\n                    {\" \"}\n                    Add Thumbnail\n                  </Button>\n                </td>\n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => onAddToShow(row[\"slot_uid\"])}\n                    //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Add To Show\n                  </Button>\n                </td>\n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    //here we use slot_uid to approve specific slot..but didnt shows on the table\n                    onClick={()=>onRemoveRecording(row['slot_uid'])}\n                  >\n                    Remove\n                  </Button>\n                </td>\n                {thumbNails && (\n                  <td>\n                    <img\n                      src={thumbNails[row[\"slot_uid\"]]}\n                      alt=\"\"\n                      width=\"350\"\n                      height=\"200\"\n                    />\n                  </td>\n                )}\n              </tr>\n            )))}\n        </tbody>\n      </Table>\n       <Button varient=\"primarty\" style={{padding:5}} onClick={()=>fetchCurrentTable()}> Reload</Button>\n      <Table bordered hover size=\"sm\" responsive key=\"RC\">\n        <h4 style={{ textAlign: \"center\" }}>Current Shows</h4>\n        <tbody>\n          <tr>\n            <th>#</th>\n            <th>Email</th>\n            <th>Title</th>\n            <th>Description</th>\n            <th>Genre</th>\n            <th>Likes</th>\n          </tr>\n\n          {currentRows &&(\n            currentRows.map((row, ind) => (\n              <tr>\n                <td>{ind + 1}</td>\n                <td>{row[\"email\"]}</td>\n                <td>{row[\"title\"]}</td>\n                <td>{row[\"note\"]}</td>\n                <td>{row[\"genre\"]}</td>\n                <td>{row[\"likes\"]}</td>\n\n                {/* here we can append slotid with server ip..since we know the src will be same slotid*/}\n                <td>\n                  <Button\n                    varient=\"secondary\"\n                    onClick={() => onRemoveShow(row[\"slot_uid\"])}\n                    //here we use slot_uid to approve specific slot..but didnt shows on the table\n                  >\n                    Remove\n                  </Button>\n                </td>\n              </tr>\n            )))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","import React,{useState} from 'react'\nimport ReactDom from 'react-dom'\nimport {Tabs,Tab, Button,Nav,Navbar} from 'react-bootstrap'\nimport Login from '../Login/Login'\nimport LiveSlotRequests from '../LiveSlotRequests/LiveSlotRequests'\nimport OfflineSlotRequests from '../OfflineSlotRequests/OfflineSlotRequests'\nimport RadioLoop from '../RadioLoop/RadioLoop'\nimport ShowsUpdation from '../ShowsUpdation/ShowsUpdation'\n\nexport default function MainNavigation(props){\n    const [key, setKey] = useState('slot_req');\n    function logout() {\n        console.log(\"logging out\");\n        document.cookie = \"JWT=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n        props.setLogin(false)\n}\n  return (\n    <div>\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand >MEA Radio Admin Panel</Navbar.Brand>\n            <Button variant=\"outline-info\" style={{position:'absolute',right:10,}} onClick={logout}>Log Out</Button>\n        </Navbar>\n        <Tabs\n        id=\"controlled-tab-example\"\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n        >\n            <Tab eventKey=\"live_slot_req\" title=\"Live Slot Requests\">\n                <LiveSlotRequests />\n            </Tab>\n            <Tab eventKey=\"offline_slot_req\" title=\"Offline Slot Requests\">\n                <OfflineSlotRequests/>\n            </Tab>\n            <Tab eventKey=\"playlist\" title=\"Shows Updation\">\n                <ShowsUpdation/>\n            </Tab>\n            <Tab eventKey=\"loop\" title=\"Radio Loop\" >\n                <RadioLoop/>\n            </Tab>\n            \n        </Tabs>\n    \n      \n    </div>\n    \n    \n  \n  );\n}","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react'\nimport Login from './components/Login/Login'\nimport MainNavigation from './components/MainNavigation/MainNavigation'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport {Form,Button } from 'react-bootstrap'\n\n\nfunction App() {\n  const [isLoggedIn, setLogin] = useState(false)\n  \n  return (\n    <div className=\"App\">\n      {isLoggedIn ? <MainNavigation isLoggedIn={isLoggedIn} setLogin={setLogin} /> : <Login isLoggedIn={isLoggedIn} setLogin={setLogin}/>}\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}